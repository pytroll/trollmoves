# Start with e.g.
# move_it_client.py -v move_it_client.ini

# Example using FTP transfer
[eumetcast_hrit_0deg_ftp]
# Servers to listen, <server>:<port>
# Use the port number defined with the -p flag for server or mirror
providers = satmottag2:9010 satmottag:9010 explorer:9010
# Local destination for the data using FTP trasnfer
destination = ftp:///san1/geo_in/0deg/
# Login credentials for the local FTP server
login = user:pass
# Topic to follow
topic = /1b/hrit-segment/0deg
# Port for file requests: 0 = random
publish_port = 0
# Disable multicasting and use direct nameserver connections
nameservers = localhost 192.168.0.10 192.168.0.11
# Activate heartbeat monitoring
# Allow missing 10 hearbeats (every heartbeat lasts 30 seconds (default)):
heartbeat_alarm_scale = 10


# Example using SSH/SCP transfer
[eumetcast_hrit_0deg_scp]
# Servers to listen, <server>:<port>
# Use the port number defined with the -p flag for server or mirror
providers = satmottag2:9010 satmottag:9010 explorer:9010
# Local destination for the data using SCP
destination = scp:///tmp/foo
# Login credentials for local SSH server.  Using keys, so no password given
login = user
# Topic to follow
topic = /1b/hrit-segment/0deg
# Port for file requests: 0 = random
publish_port = 0
# If the HRIT segments are coming compressed, we can decompress them
# compression = xrit
# Give the path to Eumetsat wavelet decompression utility
# xritdecompressor = /path/to/xRITDecompress

# Example using provider specific topics
[eumetcast_hrit_0deg_scp_per_server_topics]
# Servers to listen, <server>:<port>
# Use the port number defined with the -p flag for server or mirror
providers = satmottag2:9010/topic/1 satmottag:9010/topic/2 explorer:9010/topic/3
# Local destination for the data using SCP
destination = scp:///tmp/foo
# Login credentials for local SSH server.  Using keys, so no password given
login = user
# Topic to follow. Common for every provider. Optional.
# topic = /1b/hrit-segment/0deg
# Port for file requests: 0 = random
publish_port = 0

# Example acting as a hot spare
# NOTE: all of the clients are required to have the same section names
#       as they are used to set the heartbeat publishing and subscription
#       topics for a given data stream
[eumetcast_hrit_0deg_scp]
# Servers to listen, <server>:<port>
# Use the port number defined with the -p flag for server or mirror
# The last one is another client that is the primary client, and the messages
# coming from there need to be also handled.  For the primary client, use the
# publish port, which can't be set to 0
providers = satmottag2:9010 satmottag:9010 explorer:9010 primary_client:<publish_port>
# Local destination for the data using SCP
destination = scp:///tmp/foo
# Login credentials for local SSH server.  Using keys, so no password given
login = user
# Topic to follow
topic = /1b/hrit-segment/0deg
# Port for file requests: 0 = random
publish_port = 0
# Wait a tiny bit of time when being a hot spare.  Delay is given in seconds.
processing_delay = 0.02
# If the target location is on a remote host, the Client can't create the target directory.
#     In this case, set the below option to False so that the creation isn't attempted.
# create_target_directory = False

# Example config for requesting pushs to S3 object storage
# Example of the connection settings are shown in the docstring of trollmoves.movers.S3Mover
[eumetcast_hrit_0deg_s3]
providers = satmottag:9010 satmottag2:9010 explorer:9010
# Push to base of the bucket
destination = s3://data-bucket/
# Alternatively a sub-directory within the bucket. The directory structure will be created if it doesn't exist
# destination = s3://data-bucket/msg/0deg
topic = /1b/hrit-segment/0deg
